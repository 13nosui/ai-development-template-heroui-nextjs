name: "üîç CodeQL Security Analysis"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    # ÊØéÈÄ±ÊúàÊõúÊó•„ÅÆÂçàÂâç2ÊôÇÔºàUTCÔºâ„Å´ÂÆüË°å
    - cron: '0 2 * * 1'

jobs:
  analyze:
    name: üîç CodeQL Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript', 'typescript' ]

    steps:
    - name: üì• Checkout repository
      uses: actions/checkout@v4

    - name: üîß Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: üì¶ Install dependencies
      run: npm ci

    # CodeQL„Éá„Éº„Çø„Éô„Éº„Çπ„ÅÆÂàùÊúüÂåñ
    - name: üöÄ Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        # „Çª„Ç≠„É•„É™„ÉÜ„Ç£ÈáçË¶ñ„ÅÆ„ÇØ„Ç®„É™„ÇíÊúâÂäπÂåñ
        queries: security-extended,security-and-quality
        # „Ç´„Çπ„Çø„É†„ÇØ„Ç®„É™„ÅÆËøΩÂä†ÔºàÂ∞ÜÊù•„ÅÆÊã°ÂºµÁî®Ôºâ
        # query-filters: |
        #   include:
        #     tags: security
        config-file: ./.github/codeql/codeql-config.yml

    # Ëá™Âãï„Éì„É´„ÉâÔºàJavaScript„Éó„É≠„Ç∏„Çß„ÇØ„ÉàÁî®Ôºâ
    - name: üèóÔ∏è Autobuild
      uses: github/codeql-action/autobuild@v3

    # CodeQLÂàÜÊûê„ÅÆÂÆüË°å
    - name: üîç Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
        # ÁµêÊûú„ÇíSARIFÂΩ¢Âºè„ÅßÂá∫Âäõ
        upload: true
        
    # ÂàÜÊûêÁµêÊûú„ÅÆË©≥Á¥∞„É≠„Ç∞Âá∫Âäõ
    - name: üìä Generate analysis summary
      if: always()
      run: |
        echo "üîç CodeQL Analysis completed for ${{ matrix.language }}"
        echo "Results have been uploaded to GitHub Security tab"
        
        # „Çª„Ç≠„É•„É™„ÉÜ„Ç£„Ç¢„É©„Éº„Éà„ÅÆÊ¶ÇË¶Å„ÇíÁîüÊàê
        echo "## CodeQL Security Analysis Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Language:** ${{ matrix.language }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Analysis Date:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
        echo "- **Status:** ‚úÖ Completed" >> $GITHUB_STEP_SUMMARY
        echo "- **Results:** Check Security tab for detailed findings" >> $GITHUB_STEP_SUMMARY

  # ÂàÜÊûêÁµêÊûú„ÅÆÈÄöÁü•
  notify-results:
    name: üì¢ Notify Analysis Results
    needs: analyze
    if: always()
    runs-on: ubuntu-latest
    
    steps:
    - name: üì§ Slack notification
      if: needs.analyze.result == 'success'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      run: |
        if [ -n "$SLACK_WEBHOOK_URL" ]; then
          curl -X POST -H 'Content-type: application/json' \
            --data '{
              "text": "üîç CodeQL Security Analysis completed successfully",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*üîç CodeQL Security Analysis*\n\n*Status:* ‚úÖ Completed\n*Repository:* ${{ github.repository }}\n*Branch:* ${{ github.ref_name }}\n*Commit:* ${{ github.sha }}\n\n*View Results:* ${{ github.server_url }}/${{ github.repository }}/security/code-scanning"
                  }
                }
              ]
            }' \
            "$SLACK_WEBHOOK_URL"
        fi

    - name: üì§ Discord notification
      if: needs.analyze.result == 'success'
      env:
        DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
      run: |
        if [ -n "$DISCORD_WEBHOOK_URL" ]; then
          curl -H "Content-Type: application/json" \
            -d '{
              "embeds": [
                {
                  "title": "üîç CodeQL Security Analysis Completed",
                  "color": 65280,
                  "fields": [
                    {"name": "Repository", "value": "${{ github.repository }}", "inline": true},
                    {"name": "Branch", "value": "${{ github.ref_name }}", "inline": true},
                    {"name": "Status", "value": "‚úÖ Completed", "inline": true}
                  ],
                  "timestamp": "${{ github.event.head_commit.timestamp }}"
                }
              ]
            }' \
            "$DISCORD_WEBHOOK_URL"
        fi
