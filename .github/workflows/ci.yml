name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run TypeScript type checking
      run: npm run type-check
      
    - name: Run ESLint (check only)
      run: npm run lint:check
      continue-on-error: false
      
    - name: Build application
      run: npm run build
      timeout-minutes: 10
      
    - name: Check for Storybook stories
      id: check_stories
      run: |
        if find src -name "*.stories.*" -o -name "*.mdx" | grep -q .; then
          echo "has_stories=true" >> $GITHUB_OUTPUT
        else
          echo "has_stories=false" >> $GITHUB_OUTPUT
        fi
      
    - name: Run Storybook build (if stories exist)
      if: steps.check_stories.outputs.has_stories == 'true'
      run: npm run build-storybook
      timeout-minutes: 5
      continue-on-error: true

  security:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level moderate
      continue-on-error: true
      timeout-minutes: 5
      
    - name: Check for outdated packages
      run: npm outdated || true
      timeout-minutes: 3
